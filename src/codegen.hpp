#include <Geode/Geode.hpp>
#include "sol.hpp"


void includeClass(std::string_view cl, sol::this_state lua);


void register_cocos2d_CCEGLViewProtocol(sol::state& lua);
void register_cocos2d_CCMotionStreak(sol::state& lua);
void register_cocos2d_CCScene(sol::state& lua);
void register_cocos2d_CCParticleSystem(sol::state& lua);
void register_cocos2d_CCParticleSystemQuad(sol::state& lua);
void register_cocos2d_CCFileUtils(sol::state& lua);
void register_cocos2d_CCNode(sol::state& lua);
void register_cocos2d_CCScheduler(sol::state& lua);
void register_cocos2d_CCLayer(sol::state& lua);
void register_cocos2d_CCObject(sol::state& lua);
void register_cocos2d_CCOrbitCamera(sol::state& lua);
void register_cocos2d_CCLayerColor(sol::state& lua);
void register_cocos2d_CCLayerRGBA(sol::state& lua);
void register_cocos2d_CCMouseDispatcher(sol::state& lua);
void register_cocos2d_CCTouchDispatcher(sol::state& lua);
void register_cocos2d_CCEGLView(sol::state& lua);
void register_cocos2d_CCIMEDispatcher(sol::state& lua);
void register_cocos2d_CCKeyboardDispatcher(sol::state& lua);
void register_cocos2d_CCDirector(sol::state& lua);
void register_cocos2d_CCNodeRGBA(sol::state& lua);
void register_cocos2d_CCSprite(sol::state& lua);
void register_cocos2d_CCLabelBMFont(sol::state& lua);
void register_cocos2d_CCApplication(sol::state& lua);
void register_cocos2d_CCArray(sol::state& lua);
void register_cocos2d_CCDictionary(sol::state& lua);
void register_cocos2d_CCTransitionFade(sol::state& lua);
void register_cocos2d_CCDrawNode(sol::state& lua);
void register_cocos2d_CCSpriteBatchNode(sol::state& lua);
void register_cocos2d_CCMenuItem(sol::state& lua);
void register_cocos2d_CCMenu(sol::state& lua);
void register_cocos2d_CCDelayTime(sol::state& lua);

void register_GJDropDownLayer(sol::state& lua);
void register_AccountHelpLayer(sol::state& lua);
void register_AccountLayer(sol::state& lua);
void register_FLAlertLayer(sol::state& lua);
void register_AccountLoginLayer(sol::state& lua);
void register_AccountRegisterLayer(sol::state& lua);
void register_AchievementBar(sol::state& lua);
void register_AchievementManager(sol::state& lua);
void register_AchievementNotifier(sol::state& lua);
void register_AchievementsLayer(sol::state& lua);
void register_CCSpritePlus(sol::state& lua);
void register_GameObject(sol::state& lua);
void register_EnhancedGameObject(sol::state& lua);
void register_EffectGameObject(sol::state& lua);
void register_AdvancedFollowTriggerObject(sol::state& lua);
void register_AdvancedFollowEditObject(sol::state& lua);
void register_AnimatedGameObject(sol::state& lua);
void register_CCAnimatedSprite(sol::state& lua);
void register_AnimatedShopKeeper(sol::state& lua);
void register_AppDelegate(sol::state& lua);
void register_AudioEffectsLayer(sol::state& lua);
void register_AudioLineGuideGameObject(sol::state& lua);
void register_BoomListView(sol::state& lua);
void register_BoomScrollLayer(sol::state& lua);
void register_BrowseSmartTemplateLayer(sol::state& lua);
void register_BrowseSmartKeyLayer(sol::state& lua);
void register_ButtonSprite(sol::state& lua);
void register_CameraTriggerGameObject(sol::state& lua);
void register_CCBlockLayer(sol::state& lua);
void register_CCCircleWave(sol::state& lua);
void register_CCContentLayer(sol::state& lua);
void register_CCCounterLabel(sol::state& lua);
void register_CCMenuItemSpriteExtra(sol::state& lua);
void register_CCMenuItemToggler(sol::state& lua);
void register_CCMoveCNode(sol::state& lua);
void register_CCPartAnimSprite(sol::state& lua);
void register_CCScrollLayerExt(sol::state& lua);
void register_CCSpriteGrayscale(sol::state& lua);
void register_CCSpritePart(sol::state& lua);
void register_CCTextInputNode(sol::state& lua);
void register_ChallengesPage(sol::state& lua);
void register_GJChallengeItem(sol::state& lua);
void register_ChallengeNode(sol::state& lua);
void register_CharacterColorPage(sol::state& lua);
void register_CheckpointObject(sol::state& lua);
void register_CollisionBlockPopup(sol::state& lua);
void register_ColorAction(sol::state& lua);
void register_ColorActionSprite(sol::state& lua);
void register_ColorChannelSprite(sol::state& lua);
void register_ColorSelectLiveOverlay(sol::state& lua);
void register_SetupTriggerPopup(sol::state& lua);
void register_ColorSelectPopup(sol::state& lua);
void register_CommentCell(sol::state& lua);
void register_CommunityCreditNode(sol::state& lua);
void register_CommunityCreditsPage(sol::state& lua);
void register_ConfigureHSVWidget(sol::state& lua);
void register_ConfigureValuePopup(sol::state& lua);
void register_CountTriggerGameObject(sol::state& lua);
void register_CreateGuidelinesLayer(sol::state& lua);
void register_CreateMenuItem(sol::state& lua);
void register_CreateParticlePopup(sol::state& lua);
void register_CreatorLayer(sol::state& lua);
void register_CurrencyRewardLayer(sol::state& lua);
void register_CustomizeObjectLayer(sol::state& lua);
void register_CustomizeObjectSettingsPopup(sol::state& lua);
void register_CustomListView(sol::state& lua);
void register_CustomSongCell(sol::state& lua);
void register_CustomSFXCell(sol::state& lua);
void register_CustomSFXWidget(sol::state& lua);
void register_CustomSongLayer(sol::state& lua);
void register_CustomSongWidget(sol::state& lua);
void register_DailyLevelNode(sol::state& lua);
void register_DailyLevelPage(sol::state& lua);
void register_RingObject(sol::state& lua);
void register_DashRingObject(sol::state& lua);
void register_DemonFilterSelectLayer(sol::state& lua);
void register_DialogLayer(sol::state& lua);
void register_DialogObject(sol::state& lua);
void register_DrawGridLayer(sol::state& lua);
void register_EditButtonBar(sol::state& lua);
void register_EditGameObjectPopup(sol::state& lua);
void register_EditLevelLayer(sol::state& lua);
void register_GJOptionsLayer(sol::state& lua);
void register_EditorOptionsLayer(sol::state& lua);
void register_EditorPauseLayer(sol::state& lua);
void register_EditorUI(sol::state& lua);
void register_EditTriggersPopup(sol::state& lua);
void register_EndLevelLayer(sol::state& lua);
void register_EndPortalObject(sol::state& lua);
void register_EnhancedTriggerObject(sol::state& lua);
void register_EnterEffectObject(sol::state& lua);
void register_EventLinkTrigger(sol::state& lua);
void register_ExtendedLayer(sol::state& lua);
void register_GManager(sol::state& lua);
void register_FindBPMLayer(sol::state& lua);
void register_SetIDPopup(sol::state& lua);
void register_FindObjectPopup(sol::state& lua);
void register_FMODAudioEngine(sol::state& lua);
void register_FMODLevelVisualizer(sol::state& lua);
void register_FollowRewardPage(sol::state& lua);
void register_ForceBlockGameObject(sol::state& lua);
void register_FRequestProfilePage(sol::state& lua);
void register_FriendRequestPopup(sol::state& lua);
void register_FriendsProfilePage(sol::state& lua);
void register_GameCell(sol::state& lua);
void register_GameLevelManager(sol::state& lua);
void register_GameLevelOptionsLayer(sol::state& lua);
void register_GameManager(sol::state& lua);
void register_GameObjectCopy(sol::state& lua);
void register_GameOptionsLayer(sol::state& lua);
void register_GameOptionsTrigger(sol::state& lua);
void register_GameStatsManager(sol::state& lua);
void register_GameToolbox(sol::state& lua);
void register_GauntletLayer(sol::state& lua);
void register_GauntletNode(sol::state& lua);
void register_GauntletSelectLayer(sol::state& lua);
void register_GhostTrailEffect(sol::state& lua);
void register_GJAccountManager(sol::state& lua);
void register_GJAccountSettingsLayer(sol::state& lua);
void register_GJActionManager(sol::state& lua);
void register_GJGameState(sol::state& lua);
void register_GJBaseGameLayer(sol::state& lua);
void register_GJChestSprite(sol::state& lua);
void register_GJColorSetupLayer(sol::state& lua);
void register_GJComment(sol::state& lua);
void register_GJCommentListLayer(sol::state& lua);
void register_GJDifficultySprite(sol::state& lua);
void register_GJEffectManager(sol::state& lua);
void register_GJGroundLayer(sol::state& lua);
void register_GJFollowCommandLayer(sol::state& lua);
void register_GJGameLevel(sol::state& lua);
void register_GJGameLoadingLayer(sol::state& lua);
void register_GJGarageLayer(sol::state& lua);
void register_GJGradientLayer(sol::state& lua);
void register_GJItemIcon(sol::state& lua);
void register_GJLevelList(sol::state& lua);
void register_GJLevelScoreCell(sol::state& lua);
void register_GJListLayer(sol::state& lua);
void register_GJLocalLevelScoreCell(sol::state& lua);
void register_GJMapPack(sol::state& lua);
void register_GJMessageCell(sol::state& lua);
void register_GJMessagePopup(sol::state& lua);
void register_GJMoreGamesLayer(sol::state& lua);
void register_GJMultiplayerManager(sol::state& lua);
void register_GJObjectDecoder(sol::state& lua);
void register_GJPathPage(sol::state& lua);
void register_GJPathRewardPopup(sol::state& lua);
void register_GJPathsLayer(sol::state& lua);
void register_GJPathSprite(sol::state& lua);
void register_GJPFollowCommandLayer(sol::state& lua);
void register_GJPromoPopup(sol::state& lua);
void register_GJRequestCell(sol::state& lua);
void register_GJRewardObject(sol::state& lua);
void register_GJRobotSprite(sol::state& lua);
void register_GJRotationControl(sol::state& lua);
void register_GJScaleControl(sol::state& lua);
void register_GJScoreCell(sol::state& lua);
void register_GJSearchObject(sol::state& lua);
void register_GJShopLayer(sol::state& lua);
void register_GJSmartBlockPreview(sol::state& lua);
void register_GJSmartPrefab(sol::state& lua);
void register_GJSmartTemplate(sol::state& lua);
void register_GJSongBrowser(sol::state& lua);
void register_GJSpecialColorSelect(sol::state& lua);
void register_GJSpiderSprite(sol::state& lua);
void register_GJStoreItem(sol::state& lua);
void register_GJTransformControl(sol::state& lua);
void register_GJUINode(sol::state& lua);
void register_GJUserCell(sol::state& lua);
void register_GJUserScore(sol::state& lua);
void register_GJWriteMessagePopup(sol::state& lua);
void register_GooglePlayManager(sol::state& lua);
void register_GradientTriggerObject(sol::state& lua);
void register_GraphicsReloadLayer(sol::state& lua);
void register_GravityEffectSprite(sol::state& lua);
void register_HardStreak(sol::state& lua);
void register_HSVLiveOverlay(sol::state& lua);
void register_HSVWidgetPopup(sol::state& lua);
void register_InfoAlertButton(sol::state& lua);
void register_InfoLayer(sol::state& lua);
void register_InheritanceNode(sol::state& lua);
void register_ItemInfoPopup(sol::state& lua);
void register_ItemTriggerGameObject(sol::state& lua);
void register_KeybindingsLayer(sol::state& lua);
void register_KeybindingsManager(sol::state& lua);
void register_KeyframeAnimTriggerObject(sol::state& lua);
void register_KeyframeGameObject(sol::state& lua);
void register_LabelGameObject(sol::state& lua);
void register_LeaderboardsLayer(sol::state& lua);
void register_LevelAreaInnerLayer(sol::state& lua);
void register_LevelAreaLayer(sol::state& lua);
void register_LevelBrowserLayer(sol::state& lua);
void register_LevelCell(sol::state& lua);
void register_LevelEditorLayer(sol::state& lua);
void register_LevelInfoLayer(sol::state& lua);
void register_LevelLeaderboard(sol::state& lua);
void register_LevelListCell(sol::state& lua);
void register_LevelListLayer(sol::state& lua);
void register_LevelOptionsLayer(sol::state& lua);
void register_LevelOptionsLayer2(sol::state& lua);
void register_LevelPage(sol::state& lua);
void register_LevelSearchLayer(sol::state& lua);
void register_LevelSelectLayer(sol::state& lua);
void register_LevelSettingsLayer(sol::state& lua);
void register_LevelSettingsObject(sol::state& lua);
void register_LevelTools(sol::state& lua);
void register_LikeItemLayer(sol::state& lua);
void register_ListCell(sol::state& lua);
void register_LoadingCircle(sol::state& lua);
void register_LoadingLayer(sol::state& lua);
void register_LocalLevelManager(sol::state& lua);
void register_MapPackCell(sol::state& lua);
void register_MenuGameLayer(sol::state& lua);
void register_MenuLayer(sol::state& lua);
void register_MessagesProfilePage(sol::state& lua);
void register_MoreOptionsLayer(sol::state& lua);
void register_MoreSearchLayer(sol::state& lua);
void register_MoreVideoOptionsLayer(sol::state& lua);
void register_MultilineBitmapFont(sol::state& lua);
void register_MultiTriggerPopup(sol::state& lua);
void register_MusicArtistObject(sol::state& lua);
void register_MusicBrowser(sol::state& lua);
void register_MusicDownloadManager(sol::state& lua);
void register_NewgroundsInfoLayer(sol::state& lua);
void register_NumberInputLayer(sol::state& lua);
void register_OBB2D(sol::state& lua);
void register_ObjectToolbox(sol::state& lua);
void register_OptionsLayer(sol::state& lua);
void register_OptionsScrollLayer(sol::state& lua);
void register_ParentalOptionsLayer(sol::state& lua);
void register_ParticleGameObject(sol::state& lua);
void register_ParticlePreviewLayer(sol::state& lua);
void register_PauseLayer(sol::state& lua);
void register_PlayerCheckpoint(sol::state& lua);
void register_PlayerFireBoostSprite(sol::state& lua);
void register_PlayerObject(sol::state& lua);
void register_PlayLayer(sol::state& lua);
void register_PointNode(sol::state& lua);
void register_ProfilePage(sol::state& lua);
void register_PurchaseItemPopup(sol::state& lua);
void register_RandTriggerGameObject(sol::state& lua);
void register_RateDemonLayer(sol::state& lua);
void register_RateLevelLayer(sol::state& lua);
void register_RateStarsLayer(sol::state& lua);
void register_RetryLevelLayer(sol::state& lua);
void register_RewardsPage(sol::state& lua);
void register_RewardUnlockLayer(sol::state& lua);
void register_RotateGameplayGameObject(sol::state& lua);
void register_ScrollingLayer(sol::state& lua);
void register_SearchButton(sol::state& lua);
void register_SetTextPopup(sol::state& lua);
void register_SearchSFXPopup(sol::state& lua);
void register_SecretLayer(sol::state& lua);
void register_SecretLayer2(sol::state& lua);
void register_SecretLayer3(sol::state& lua);
void register_SecretLayer4(sol::state& lua);
void register_SecretRewardsLayer(sol::state& lua);
void register_SelectArtLayer(sol::state& lua);
void register_SelectEventLayer(sol::state& lua);
void register_SelectFontLayer(sol::state& lua);
void register_SelectListIconLayer(sol::state& lua);
void register_SelectPremadeLayer(sol::state& lua);
void register_SelectSettingLayer(sol::state& lua);
void register_SelectSFXSortLayer(sol::state& lua);
void register_SequenceTriggerGameObject(sol::state& lua);
void register_SetColorIDPopup(sol::state& lua);
void register_SetFolderPopup(sol::state& lua);
void register_SetGroupIDLayer(sol::state& lua);
void register_SetItemIDLayer(sol::state& lua);
void register_SetLevelOrderPopup(sol::state& lua);
void register_SetTargetIDLayer(sol::state& lua);
void register_SetupAdvFollowEditPhysicsPopup(sol::state& lua);
void register_SetupAdvFollowPopup(sol::state& lua);
void register_SetupAdvFollowRetargetPopup(sol::state& lua);
void register_SetupAnimationPopup(sol::state& lua);
void register_SetupAnimSettingsPopup(sol::state& lua);
void register_SetupAreaMoveTriggerPopup(sol::state& lua);
void register_SetupAreaTintTriggerPopup(sol::state& lua);
void register_SetupAreaAnimTriggerPopup(sol::state& lua);
void register_SetupAreaFadeTriggerPopup(sol::state& lua);
void register_SetupAreaRotateTriggerPopup(sol::state& lua);
void register_SetupAreaTransformTriggerPopup(sol::state& lua);
void register_SetupAreaTriggerPopup(sol::state& lua);
void register_SetupArtSwitchPopup(sol::state& lua);
void register_SetupAudioLineGuidePopup(sol::state& lua);
void register_SetupAudioTriggerPopup(sol::state& lua);
void register_SetupBGSpeedTrigger(sol::state& lua);
void register_SetupCameraEdgePopup(sol::state& lua);
void register_SetupCameraGuidePopup(sol::state& lua);
void register_SetupCameraModePopup(sol::state& lua);
void register_SetupCameraOffsetTrigger(sol::state& lua);
void register_SetupCameraRotatePopup2(sol::state& lua);
void register_SetupCheckpointPopup(sol::state& lua);
void register_SetupCoinLayer(sol::state& lua);
void register_SetupInstantCollisionTriggerPopup(sol::state& lua);
void register_SetupCollisionStateTriggerPopup(sol::state& lua);
void register_SetupCollisionTriggerPopup(sol::state& lua);
void register_SetupCountTriggerPopup(sol::state& lua);
void register_SetupDashRingPopup(sol::state& lua);
void register_SetupEndPopup(sol::state& lua);
void register_SetupEnterEffectPopup(sol::state& lua);
void register_SetupEnterTriggerPopup(sol::state& lua);
void register_SetupEventLinkPopup(sol::state& lua);
void register_SetupForceBlockPopup(sol::state& lua);
void register_SetupGameplayOffsetPopup(sol::state& lua);
void register_SetupGradientPopup(sol::state& lua);
void register_SetupGravityTriggerPopup(sol::state& lua);
void register_SetupInstantCountPopup(sol::state& lua);
void register_SetupInteractObjectPopup(sol::state& lua);
void register_SetupItemCompareTriggerPopup(sol::state& lua);
void register_SetupItemEditTriggerPopup(sol::state& lua);
void register_SetupKeyframeAnimPopup(sol::state& lua);
void register_SetupKeyframePopup(sol::state& lua);
void register_SetupMGTrigger(sol::state& lua);
void register_SetupMoveCommandPopup(sol::state& lua);
void register_SetupObjectControlPopup(sol::state& lua);
void register_SetupObjectOptions2Popup(sol::state& lua);
void register_SetupObjectOptionsPopup(sol::state& lua);
void register_SetupObjectTogglePopup(sol::state& lua);
void register_SetupOpacityPopup(sol::state& lua);
void register_SetupOptionsTriggerPopup(sol::state& lua);
void register_SetupPersistentItemTriggerPopup(sol::state& lua);
void register_SetupPickupTriggerPopup(sol::state& lua);
void register_SetupPlatformerEndPopup(sol::state& lua);
void register_SetupPlayerControlPopup(sol::state& lua);
void register_SetupPulsePopup(sol::state& lua);
void register_SetupRandAdvTriggerPopup(sol::state& lua);
void register_SetupRandTriggerPopup(sol::state& lua);
void register_SetupResetTriggerPopup(sol::state& lua);
void register_SetupReverbPopup(sol::state& lua);
void register_SetupRotateCommandPopup(sol::state& lua);
void register_SetupRotateGameplayPopup(sol::state& lua);
void register_SetupRotatePopup(sol::state& lua);
void register_SetupSequenceTriggerPopup(sol::state& lua);
void register_SetupSFXEditPopup(sol::state& lua);
void register_SetupSFXPopup(sol::state& lua);
void register_SetupShaderEffectPopup(sol::state& lua);
void register_SetupShakePopup(sol::state& lua);
void register_SetupSmartBlockLayer(sol::state& lua);
void register_SetupSmartTemplateLayer(sol::state& lua);
void register_SetupSongTriggerPopup(sol::state& lua);
void register_SetupSpawnParticlePopup(sol::state& lua);
void register_SetupSpawnPopup(sol::state& lua);
void register_SetupStaticCameraPopup(sol::state& lua);
void register_SetupStopTriggerPopup(sol::state& lua);
void register_SetupTeleportPopup(sol::state& lua);
void register_SetupTimerControlTriggerPopup(sol::state& lua);
void register_SetupTimerEventTriggerPopup(sol::state& lua);
void register_SetupTimerTriggerPopup(sol::state& lua);
void register_SetupTimeWarpPopup(sol::state& lua);
void register_SetupTouchTogglePopup(sol::state& lua);
void register_SetupTransformPopup(sol::state& lua);
void register_SetupZoomTriggerPopup(sol::state& lua);
void register_SFXBrowser(sol::state& lua);
void register_SFXInfoObject(sol::state& lua);
void register_SFXFolderObject(sol::state& lua);
void register_SFXSearchResult(sol::state& lua);
void register_ShaderGameObject(sol::state& lua);
void register_ShaderLayer(sol::state& lua);
void register_ShardsPage(sol::state& lua);
void register_ShareCommentLayer(sol::state& lua);
void register_ShareLevelLayer(sol::state& lua);
void register_ShareLevelSettingsLayer(sol::state& lua);
void register_ShareListLayer(sol::state& lua);
void register_SimplePlayer(sol::state& lua);
void register_Slider(sol::state& lua);
void register_SliderThumb(sol::state& lua);
void register_SliderTouchLogic(sol::state& lua);
void register_SmartGameObject(sol::state& lua);
void register_SongCell(sol::state& lua);
void register_SongInfoLayer(sol::state& lua);
void register_SongInfoObject(sol::state& lua);
void register_SongOptionsLayer(sol::state& lua);
void register_SongSelectNode(sol::state& lua);
void register_SongsLayer(sol::state& lua);
void register_SpawnParticleGameObject(sol::state& lua);
void register_SpawnTriggerGameObject(sol::state& lua);
void register_StartPosObject(sol::state& lua);
void register_StatsCell(sol::state& lua);
void register_StatsLayer(sol::state& lua);
void register_StatsObject(sol::state& lua);
void register_SupportLayer(sol::state& lua);
void register_TableView(sol::state& lua);
void register_TeleportPortalObject(sol::state& lua);
void register_TextAlertPopup(sol::state& lua);
void register_TextArea(sol::state& lua);
void register_TextGameObject(sol::state& lua);
void register_TimerTriggerGameObject(sol::state& lua);
void register_TopArtistsLayer(sol::state& lua);
void register_TOSPopup(sol::state& lua);
void register_TransformTriggerGameObject(sol::state& lua);
void register_TriggerControlGameObject(sol::state& lua);
void register_TutorialLayer(sol::state& lua);
void register_UILayer(sol::state& lua);
void register_UIObjectSettingsPopup(sol::state& lua);
void register_UIOptionsLayer(sol::state& lua);
void register_UISaveLoadLayer(sol::state& lua);
void register_UndoObject(sol::state& lua);
void register_UpdateAccountSettingsPopup(sol::state& lua);
void register_UploadActionPopup(sol::state& lua);
void register_UploadListPopup(sol::state& lua);
void register_UploadPopup(sol::state& lua);
void register_URLViewLayer(sol::state& lua);
void register_VideoOptionsLayer(sol::state& lua);
